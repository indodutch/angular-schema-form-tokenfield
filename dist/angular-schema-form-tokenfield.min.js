angular.module("schemaForm").run(["$templateCache",function(o){o.put("directives/decorators/bootstrap/tokenfield/angular-schema-form-tokenfield.html",'<div class="form-group {{form.htmlClass}}" data-ng-class="{\'has-error\': hasError()}"><label class="control-label {{form.labelHtmlClass}}" data-ng-show="showTitle()">{{form.title}}</label><div data-ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span class="input-group-addon" data-ng-if="form.fieldAddonLeft" data-ng-bind-html="form.fieldAddonLeft"></span> <input type="text" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" placeholder="{{$scope.placeholder}}" angular-bootstrap-tokenfield="" tokens="form.tokens" limit="form.limit" min-length="form.minLength" min-width="form.minWidth" show-autocomplete-on-focus="form.showAutocompleteOnFocus" autocomplete="form.autocomplete" create-tokens-on-blur="form.createTokensOnBlur" delimiter="form.delimiter" beautify="form.beautify" inputtype="form.inputType" data-ng-show="form.key" data-ng-model="$$value$$" data-ng-disabled="form.readonly"> <span class="input-group-addon" data-ng-if="form.fieldAddonRight" data-ng-bind-html="form.fieldAddonRight"></span></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div>')}]);
angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,t,o){var r=function(t,r,a){if("string"===r.type&&"tokenfield"===r.format){var i=e.stdFormObj(t,r,a);return i.key=a.path,i.type="tokenfield",a.lookup[o.stringify(a.path)]=i,i}};e.defaults.string.unshift(r),t.addMapping("bootstrapDecorator","tokenfield","directives/decorators/bootstrap/tokenfield/angular-schema-form-tokenfield.html"),t.createDirective("tokenfield","directives/decorators/bootstrap/tokenfield/angular-schema-form-tokenfield.html")}]);